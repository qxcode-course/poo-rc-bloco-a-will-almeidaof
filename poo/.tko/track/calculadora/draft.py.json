{
    "patches": [
        {
            "label": "2025-10-02_19-22-55",
            "content": "@@ -1,450 +0,0 @@\n-class Calculadora:%0A    def __init__(self):%0A        self.display: float = 0%0A        self.battery: int = 0%0A        self.batteryMax: int = 100%0A%0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.display%7D:%7Bself.battery%7D:%7Bself.batteryMax%7D%22%0A%0Adef main():%0A    calculadora: Calculadora = Calculadora()%0A    while True:%0A        line: str = input()%0A        print(%22$%22+line)%0A        args:list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break\n",
            "lines": "0"
        },
        {
            "label": "2025-10-02_19-42-36",
            "content": "@@ -37,27 +37,11 @@\n self\n-,batterymax: int\n ):%0A\n+\n     \n@@ -133,18 +133,11 @@\n t = \n-batterymax\n+100\n %0A%0A  \n@@ -230,12 +230,221 @@\n ryMax%7D%22%0A\n-    \n+%0Adef main():%0A    calculadora: Calculadora = Calculadora()%0A    while True:%0A        line: str = input()%0A        print(%22$%22+line)%0A        args:list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break\n",
            "lines": "17"
        },
        {
            "label": "2025-10-02_23-51-10",
            "content": "@@ -1,172 +1,17 @@\n-# %7C    Cauculator    %7C%0A# %7C------------------%7C%0A# %7C battery: int     %7C%0A# %7C maxBattery: int  %7C%0A# %7C display: float   %7C%0A# --------------------%0A%0A%0A%0A# Contruindo classe\n+class\n  Calcula\n tor%0A\n@@ -10,141 +10,58 @@\n cula\n-tor%0A%0Aclass Calculator\n+dora\n :%0A\n+  \n   def \n+_\n _init_\n+_\n (self,\n- maxBattery: int):%0A    self.battery:    int   = 0;%0A    self.maxBattery: int   = maxBattery;%0A\n+batterymax: int):%0A    \n     \n@@ -73,19 +73,16 @@\n display:\n-   \n  float =\n@@ -87,1398 +87,178 @@\n  = 0\n-.00;%0A%0A  def _str_(self) -%3E str:%0A    return f%22display = %7Bself.display:.2f%7D, battery = %7Bself.battery%7D%22;%0A%0A  def charge (self, value: int):%0A    self.battery += value;%0A    if self.battery %3E self.maxBattery:%0A      self.battery = self.maxBattery;%0A%0A  def sum(self, a: float, b: float):%0A    if self.battery == 0:%0A      print(%22fail: bateria insuficiente%22);%0A    %0A    else:%0A      self.display = a + b;%0A      self.battery -= 1;%0A%0A  def division(self, num: float, den:float):%0A    if self.battery == 0:%0A      print(%22fail: bateria insuficiente%22);%0A%0A    elif den == 0:%0A      print(%22fail: divisao por zero%22);%0A      self.battery -= 1;%0A%0A    else:%0A      self.display = num / den;%0A      self.battery -= 1;%0A%0A# Contrindo fun%C3%A7%C3%A3o main()%0A%0Adef main():%0A  calculator: Calculator = Calculator(0);%0A%0A  while True:%0A    line: str = input();%0A    args: list%5Bstr%5D = line.split(%22 %22);%0A    %0A    print(f%22$%7Bline%7D%22);%0A%0A    match args%5B0%5D:%0A      case %22init%22:%0A        calculator.maxBattery = int(args%5B1%5D);%0A        calculator.battery = 0;%0A        calculator.display = 0;%0A      %0A      case %22show%22:%0A        print(calculator);%0A%0A      case %22charge%22:%0A        calculator.charge(int(args%5B1%5D));%0A%0A      case %22sum%22:%0A        calculator.sum(int(args%5B1%5D), int(args%5B2%5D));%0A%0A      case %22div%22:%0A        calculator.division(int(args%5B1%5D), int(args%5B2%5D));%0A      %0A      case %22end%22:%0A        break;%0A%0A      case _:%0A        print(%22error: comando n%C3%A3o encontrado%22);%0A%0Amain();\n+%0A        self.battery: int = 0%0A        self.batteryMax: int = batterymax%0A%0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.display%7D:%7Bself.battery%7D:%7Bself.batteryMax%7D%22%0A    \n",
            "lines": "9"
        },
        {
            "label": "2025-10-03_00-10-32",
            "content": "@@ -1084,16 +1084,17 @@\n culator(\n+0\n );%0A%0A  wh\n",
            "lines": "81"
        },
        {
            "label": "2025-10-03_00-11-58",
            "content": "@@ -194,16 +194,14 @@\n def \n-_\n _init_\n-_\n (sel\n@@ -340,15 +340,13 @@\n def \n-_\n _str_\n-_\n (sel\n@@ -1084,17 +1084,16 @@\n culator(\n-0\n );%0A%0A  wh\n",
            "lines": "81"
        },
        {
            "label": "2025-10-03_00-49-30",
            "content": "# |    Cauculator    |\n# |------------------|\n# | battery: int     |\n# | maxBattery: int  |\n# | display: float   |\n# --------------------\n\n\n\n# Contruindo classe Calculator\n\nclass Calculator:\n  def __init__(self, maxBattery: int):\n    self.battery:    int   = 0;\n    self.maxBattery: int   = maxBattery;\n    self.display:    float = 0.00;\n\n  def __str__(self) -> str:\n    return f\"display = {self.display:.2f}, battery = {self.battery}\";\n\n  def charge (self, value: int):\n    self.battery += value;\n    if self.battery > self.maxBattery:\n      self.battery = self.maxBattery;\n\n  def sum(self, a: float, b: float):\n    if self.battery == 0:\n      print(\"fail: bateria insuficiente\");\n    \n    else:\n      self.display = a + b;\n      self.battery -= 1;\n\n  def division(self, num: float, den:float):\n    if self.battery == 0:\n      print(\"fail: bateria insuficiente\");\n\n    elif den == 0:\n      print(\"fail: divisao por zero\");\n      self.battery -= 1;\n\n    else:\n      self.display = num / den;\n      self.battery -= 1;\n\n# Contrindo fun\u00e7\u00e3o main()\n\ndef main():\n  calculator: Calculator = Calculator(0);\n\n  while True:\n    line: str = input();\n    args: list[str] = line.split(\" \");\n    \n    print(f\"${line}\");\n\n    match args[0]:\n      case \"init\":\n        calculator.maxBattery = int(args[1]);\n        calculator.battery = 0;\n        calculator.display = 0;\n      \n      case \"show\":\n        print(calculator);\n\n      case \"charge\":\n        calculator.charge(int(args[1]));\n\n      case \"sum\":\n        calculator.sum(int(args[1]), int(args[2]));\n\n      case \"div\":\n        calculator.division(int(args[1]), int(args[2]));\n      \n      case \"end\":\n        break;\n\n      case _:\n        print(\"error: comando n\u00e3o encontrado\");\n\nmain();",
            "lines": "81"
        }
    ]
}